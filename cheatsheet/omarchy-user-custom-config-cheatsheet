#!/bin/bash

CHEAT_FILE="/home/jebin/git/omarchy_custom_config/cheatsheet/cheatsheet.csv"
CONFIG_FILE="/home/jebin/git/omarchy_custom_config/config.toml"

# Ensure Gemini toggle exists in config
grep -q '^SEARCH_WITH_GEMINI=' "$CONFIG_FILE" || echo 'SEARCH_WITH_GEMINI="false"' >> "$CONFIG_FILE"

# Read current GEMINI toggle
SEARCH_WITH_GEMINI=$(awk -F= '/SEARCH_WITH_GEMINI/ {gsub(/[" ]/,"",$2); print $2}' "$CONFIG_FILE")

# Prepare special rows
if [[ "$SEARCH_WITH_GEMINI" == "true" ]]; then
    GEMINI_ROW="[✓] Search with Gemini API → Toggle Gemini search"
else
    GEMINI_ROW="[ ] Search with Gemini API → Toggle Gemini search"
fi

COPY_ALL_ROW="Copy all cheat → Copy all cheats to clipboard"

# Build menu items
build_menu() {
    {
        echo "$GEMINI_ROW"
        echo "$COPY_ALL_ROW"
        awk -F, '{printf "%s → %s\n", $1, $2}' "$CHEAT_FILE"
    } | column -t -s '→'
}

# fzf arguments
fzf_args=(
  --preview '
    selection=$(echo {});
    cmd=$(echo $selection | awk "{print \$1}"); 
    desc=$(grep -F "$cmd" "'"$CHEAT_FILE"'" | cut -d, -f2 | head -1);
    if [[ -n "$desc" ]]; then
      echo "📝 Description: $desc";
      echo "";
      echo "";
      echo "─────────────────────────────────────────────────────";
      echo "";
    fi;
    main_cmd=$(echo "$cmd" | awk "{print \$1}" | sed "s/^sudo //");
    if [[ "$selection" != *"Search with Gemini API"* && "$cmd" != *"Copy all cheat"* ]]; then
      echo "📖 Man Page: $main_cmd";
      echo "";
      man "$main_cmd" 2>/dev/null || clear;echo "No manual entry for $main_cmd";
    fi'
  --preview-label='Description + man page | alt-p: toggle, alt-j/k: scroll'
  --preview-label-pos='bottom'
  --preview-window 'down:65%:wrap'
  --bind 'alt-p:toggle-preview'
  --bind 'alt-d:preview-half-page-down,alt-u:preview-half-page-up'
  --bind 'alt-k:preview-up,alt-j:preview-down'
  --color 'pointer:green,marker:green'
  --prompt 'Cheatsheet> '
  --header 'Enter: copy command | alt-p: toggle preview | Ctrl-C: exit'
  --no-multi
)

# Show menu and get selection
selection=$(build_menu | fzf "${fzf_args[@]}")

# Exit if no selection
[[ -z "$selection" ]] && exit

# Handle Gemini toggle
if [[ "$selection" =~ "Search with Gemini API" ]]; then
    if [[ "$SEARCH_WITH_GEMINI" == "true" ]]; then
        sed -i 's/SEARCH_WITH_GEMINI *= *.*/SEARCH_WITH_GEMINI="false"/' "$CONFIG_FILE"
        notify-send "Cheatsheet" "Gemini search disabled ✅"
    else
        sed -i 's/SEARCH_WITH_GEMINI *= *.*/SEARCH_WITH_GEMINI="true"/' "$CONFIG_FILE"
        notify-send "Cheatsheet" "Gemini search enabled ✅"
    fi
    # Rerun to reflect updated toggle
    exec "$0"
fi

# Handle copy all cheats
if [[ "$selection" =~ ^"Copy all cheat" ]]; then
    wl-copy < "$CHEAT_FILE"
    notify-send "Cheatsheet" "All cheats copied to clipboard ✅"
    exit
fi

# Handle regular cheat selection - copy command (first column)
command=$(echo "$selection" | awk -F'→' '{print $1}' | xargs)
wl-copy <<< "$command"
notify-send "Cheatsheet" "Command copied: $command ✅"